openapi: 3.0.3
info:
  title: OpenAPI 3.0
  description: Demo
  termsOfService: http://swagger.io/terms/
  contact:
    email: tanhv4@hdbank.com.vn
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080
tags:
  - name: user
    description: Operations about user
  - name: socket
    description: Operations about socket
paths:
  /v1/user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid request
        '500':
          description: Internal server error
        '501':
          description: Not Implemented
        default:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /v1/user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        '500':
          description: Internal server error
        '501':
          description: Not Implemented
        default:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /v1/socket:
    post:
      tags:
        - socket
      summary: Send socket
      description: ''
      operationId: sendSocket
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        '500':
          description: Internal server error
        '501':
          description: Not Implemented
        default:
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    RequestHDBank:
      type: object
      properties:
        requestId:
          type: string
          example: 10
          description: Request Id is unique
        requestType:
          type: string
          example: verifyOTP
          description: Request type
        channel:
          type: string
          example: 0
          description: Result code
        tokenInfo:
          $ref: '#/components/schemas/UserTokenInfo'
        extras:
          type: object
          description: Extras
    Response:
      type: object
      properties:
        requestId:
          type: string
          example: 10
          description: Request Id is unique
        requestTime:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
          description: Request time
        resultCode:
          type: integer
          format: int32
          example: 0
          description: Result code
        resultMessage:
          type: string
          example: Success
          description: Result Message
        data:
          type: object
          description: Data response
    UserData:
      type: object
      properties:
        requestId:
          type: string
          example: 'UUID'
        userName:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phoneNumber:
          type: string
          example: '12345'
    UserTokenInfo:
      type: object
      properties:
        userId:
          type: string
          example: 'ABC10'
          description: User id
        mediaType:
          type: string
          example: '04'
          description: Media type
        serialNo:
          type: string
          example: U123
          description: Serial number